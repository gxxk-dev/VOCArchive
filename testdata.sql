PRAGMA defer_foreign_keys=TRUE;
CREATE TABLE creator ( uuid TEXT PRIMARY KEY, name TEXT NOT NULL, type TEXT CHECK(type IN ('human', 'virtual')) NOT NULL, voicelib TEXT );
INSERT INTO "creator" VALUES('11111111-1111-1111-1111-111111111111','初音未来','virtual','Crypton Future Media');
INSERT INTO "creator" VALUES('22222222-2222-2222-2222-222222222222','周杰伦1','human',NULL);
INSERT INTO "creator" VALUES('33333333-3333-3333-3333-333333333333','镜音铃','virtual','Crypton Future Media');
CREATE TABLE creator_wiki ( creator_uuid TEXT NOT NULL REFERENCES creator(uuid) ON DELETE CASCADE, platform TEXT NOT NULL, identifier TEXT NOT NULL, PRIMARY KEY (creator_uuid, platform) );
INSERT INTO "creator_wiki" VALUES('22222222-2222-2222-2222-222222222222','wikipedia','周杰伦');
INSERT INTO "creator_wiki" VALUES('11111111-1111-1111-1111-111111111111','moegirl','初音未来');
INSERT INTO "creator_wiki" VALUES('11111111-1111-1111-1111-111111111111','wikipedia','Hatsune_Miku');
CREATE TABLE work ( uuid TEXT PRIMARY KEY, copyright_basis TEXT NOT NULL CHECK(copyright_basis IN ('none', 'accept', 'license')) );
INSERT INTO "work" VALUES('44444444-4444-4444-4444-444444444444','license');
INSERT INTO "work" VALUES('55555555-5555-5555-5555-555555555555','accept');
INSERT INTO "work" VALUES('66666666-6666-6666-6666-666666666666','none');
INSERT INTO "work" VALUES('b92165d2-f56e-44df-978c-5cd8259334e2','accept');
CREATE TABLE work_title ( work_uuid TEXT NOT NULL REFERENCES work(uuid) ON DELETE CASCADE, is_official BOOLEAN NOT NULL, language TEXT NOT NULL, title TEXT NOT NULL, PRIMARY KEY (work_uuid, language) );
INSERT INTO "work_title" VALUES('44444444-4444-4444-4444-444444444444',1,'ja','千本桜');
INSERT INTO "work_title" VALUES('44444444-4444-4444-4444-444444444444',0,'zh-CN','千本樱');
INSERT INTO "work_title" VALUES('b92165d2-f56e-44df-978c-5cd8259334e2',1,'ja','111');
INSERT INTO "work_title" VALUES('55555555-5555-5555-5555-555555555555',0,'zh-CN','青花瓷');
INSERT INTO "work_title" VALUES('55555555-5555-5555-5555-555555555555',1,'ja','aaa');
CREATE TABLE work_license ( work_uuid TEXT PRIMARY KEY REFERENCES work(uuid) ON DELETE CASCADE, license_type TEXT NOT NULL );
INSERT INTO "work_license" VALUES('44444444-4444-4444-4444-444444444444','CC BY-NC-SA 3.0');
CREATE TABLE media_source ( uuid TEXT PRIMARY KEY, work_uuid TEXT NOT NULL REFERENCES work(uuid) ON DELETE CASCADE, is_music BOOLEAN NOT NULL, file_name TEXT NOT NULL, url TEXT NOT NULL, mime_type TEXT NOT NULL, info TEXT NOT NULL );
INSERT INTO "media_source" VALUES('77777777-7777-7777-7777-777777777777','44444444-4444-4444-4444-444444444444',1,'senbonzakura.mp3','https://example.com/senbonzakura.mp3','audio/mpeg','MP3 320kbps111');
INSERT INTO "media_source" VALUES('88888888-8888-8888-8888-888888888888','55555555-5555-5555-5555-555555555555',1,'blue_porcelain.flac','https://example.com/blue_porcelain.flac','audio/flac','FLAC 24bit/96kHz');
CREATE TABLE asset ( uuid TEXT PRIMARY KEY, file_id TEXT NOT NULL, work_uuid TEXT NOT NULL REFERENCES work(uuid) ON DELETE CASCADE, asset_type TEXT CHECK(asset_type IN ('lyrics', 'picture')) NOT NULL, file_name TEXT NOT NULL, is_previewpic BOOLEAN, language TEXT );
INSERT INTO "asset" VALUES('99999999-9999-9999-9999-999999999999','lyrics_001','44444444-4444-4444-4444-444444444444','lyrics','lyrics.txt',0,'ja');
INSERT INTO "asset" VALUES('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa','cover_001','44444444-4444-4444-4444-444444444444','picture','cover.jpg',1,NULL);
INSERT INTO "asset" VALUES('bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb','preview_001','55555555-5555-5555-5555-555555555555','picture','preview.jpg',0,NULL);
CREATE TABLE asset_creator ( asset_uuid TEXT NOT NULL REFERENCES asset(uuid) ON DELETE CASCADE, creator_uuid TEXT NOT NULL REFERENCES creator(uuid), role TEXT NOT NULL, PRIMARY KEY (asset_uuid, creator_uuid) );
INSERT INTO "asset_creator" VALUES('aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa','33333333-3333-3333-3333-333333333333','illustrator');
INSERT INTO "asset_creator" VALUES('99999999-9999-9999-9999-999999999999','11111111-1111-1111-1111-111111111111','lyricist');
CREATE TABLE work_relation ( uuid TEXT PRIMARY KEY, from_work_uuid TEXT NOT NULL REFERENCES work(uuid) ON DELETE CASCADE, to_work_uuid TEXT NOT NULL REFERENCES work(uuid) ON DELETE CASCADE, relation_type TEXT NOT NULL CHECK(relation_type IN ( 'original', 'remix', 'cover', 'remake', 'picture', 'lyrics' )) );
INSERT INTO "work_relation" VALUES('cccccccc-cccc-cccc-cccc-cccccccccccc','66666666-6666-6666-6666-666666666666','44444444-4444-4444-4444-444444444444','original');
INSERT INTO "work_relation" VALUES('dddddddd-dddd-dddd-dddd-dddddddddddd','55555555-5555-5555-5555-555555555555','66666666-6666-6666-6666-666666666666','cover');
CREATE TABLE work_wiki ( work_uuid TEXT NOT NULL REFERENCES work(uuid) ON DELETE CASCADE, platform TEXT NOT NULL, identifier TEXT NOT NULL, PRIMARY KEY (work_uuid, platform) );
INSERT INTO "work_wiki" VALUES('44444444-4444-4444-4444-444444444444','vocadb','song12345');
INSERT INTO "work_wiki" VALUES('55555555-5555-5555-5555-555555555555','baidu','青花瓷(周杰伦歌曲)');
CREATE TABLE work_creator ( work_uuid TEXT NOT NULL REFERENCES work(uuid) ON DELETE CASCADE, creator_uuid TEXT NOT NULL REFERENCES creator(uuid) ON DELETE CASCADE, role TEXT NOT NULL, PRIMARY KEY (work_uuid, creator_uuid, role) );
INSERT INTO "work_creator" VALUES('44444444-4444-4444-4444-444444444444','11111111-1111-1111-1111-111111111111','vocal');
INSERT INTO "work_creator" VALUES('55555555-5555-5555-5555-555555555555','22222222-2222-2222-2222-222222222222','composer');
INSERT INTO "work_creator" VALUES('55555555-5555-5555-5555-555555555555','22222222-2222-2222-2222-222222222222','singer');